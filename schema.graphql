"""
Autogenerated return type of AddTeamMember
"""
type AddTeamMemberPayload {
  errors: [FormError!]!
  success: Boolean!
  team: Team
}

type Company {
  autoPdf: Boolean
  autoWatermark: Boolean
  broker: Company
  id: ID!
  isActive: Boolean
  name: String!
  owner: User!
  parent: Company
  previewOnly: Boolean
  subscription: Subscription
  teams: [Team!]!
  totalStorage: Int
  totalUsers: Int
  users: [User!]!
}

"""
Autogenerated return type of CreateCompany
"""
type CreateCompanyPayload {
  company: Company
  errors: [FormError!]!
  success: Boolean!
}

"""
Autogenerated return type of CreateTeam
"""
type CreateTeamPayload {
  errors: [FormError!]!
  success: Boolean!
  team: Team
}

"""
CurrentUser
"""
type CurrentUser {
  id: String!
  user: User
}

"""
A user-readable error from a form field
"""
type FormError {
  """
  A description of the error
  """
  message: String!

  """
  Which field this error came from
  """
  path: String
}

type Mutation {
  addTeamMember(companyId: ID!, email: String!, fullName: String!, role: ID!, team: String!): AddTeamMemberPayload
  createCompany(name: String!): CreateCompanyPayload
  createTeam(companyID: String!, name: String!): CreateTeamPayload
  removeCompanyMember(companyId: ID!, userId: ID, userIds: [ID!]): RemoveCompanyMemberPayload
  removeTeamMember(teamId: ID!, userId: ID, userIds: [ID!]): RemoveTeamMemberPayload
  sendResetPasswordInstructions(email: String!): SendResetPasswordInstructionsPayload
  signInUser(email: String!, password: String!, provider: String!, socialLogin: Boolean!, tokenID: String!, uuID: String!): SignInUserPayload
  signOutUser: SignOutUserPayload
  signUpUser(companyName: String!, email: String!, fullName: String!, password: String!, provider: String!, socialLogin: Boolean!, tokenID: String!, uuID: String!): SignUpUserPayload
  updateCompany(autoPdf: Boolean!, autoWatermark: Boolean!, id: ID!, name: String!, previewOnly: Boolean!): UpdateCompanyPayload
  updateTeamMember(companyId: ID!, email: String!, fullName: String!, role: ID!): UpdateTeamMemberPayload
  updateUserData(displayName: String!, email: String!, fullName: String!): UpdateUserDataPayload
  updateUserNotificatiosn(input: UpdateUserNotificatiosnInput!): UpdateUserNotificatiosnPayload
  updateUserPassword(password: String!): UpdateUserPasswordPayload
}

type Query {
  """
  Find a company by id
  """
  company(id: ID!): Company!

  """
  The currently logged in user
  """
  currentUser: CurrentUser

  """
  Return All available roles
  """
  roles: [Role!]!

  """
  Find a team by id
  """
  team(id: ID!): Team!

  """
  Return details of a user
  """
  user(id: ID!): User!

  """
  Information for resetting a users password
  """
  userForPasswordReset(
    """
    The reset token received from a forgot password email
    """
    token: String!
  ): UserForPasswordReset
}

"""
Autogenerated return type of RemoveCompanyMember
"""
type RemoveCompanyMemberPayload {
  errors: [FormError!]!
  success: Boolean!
  team: Team
}

"""
Autogenerated return type of RemoveTeamMember
"""
type RemoveTeamMemberPayload {
  errors: [FormError!]!
  success: Boolean!
  team: Team
}

"""
All Available Roles
"""
type Role {
  id: ID!
  name: String!
}

"""
Autogenerated return type of SendResetPasswordInstructions
"""
type SendResetPasswordInstructionsPayload {
  errors: [FormError!]!
  success: Boolean!
}

"""
Autogenerated return type of SignInUser
"""
type SignInUserPayload {
  currentUser: CurrentUser
  errors: [FormError!]!
  success: Boolean!
  user: User
}

"""
Autogenerated return type of SignOutUser
"""
type SignOutUserPayload {
  errors: [FormError!]!
  success: Boolean!
}

"""
Autogenerated return type of SignUpUser
"""
type SignUpUserPayload {
  errors: [FormError!]!
  success: Boolean!
  user: User
}

type Subscription {
  additionalStorage: String
  autoPdf: Boolean
  autoWatermark: Boolean
  description: String
  id: ID!
  maxStorage: String
  maxUsers: String
  name: String!
}

"""
Team
"""
type Team {
  company: Company!
  id: ID!
  name: String!
  users: [User!]!
}

"""
Autogenerated return type of UpdateCompany
"""
type UpdateCompanyPayload {
  company: Company
  errors: [FormError!]!
  success: Boolean!
}

"""
Autogenerated return type of UpdateTeamMember
"""
type UpdateTeamMemberPayload {
  errors: [FormError!]!
  success: Boolean!
  team: Team
}

"""
Autogenerated return type of UpdateUserData
"""
type UpdateUserDataPayload {
  errors: [FormError!]!
  success: Boolean!
  user: User
}

"""
Autogenerated input type of UpdateUserNotificatiosn
"""
input UpdateUserNotificatiosnInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateUserNotificatiosn
"""
type UpdateUserNotificatiosnPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateUserPassword
"""
type UpdateUserPasswordPayload {
  errors: [FormError!]!
  success: Boolean!
  user: User
}

"""
User
"""
type User {
  companies: [Company!]
  displayName: String!
  email: String!
  fullName: String!
  id: ID!
  ownedCompanies: [Company!]
  roles: [Role!]
  teams: [Team!]
}

"""
User with limited fields for the password reset screen
"""
type UserForPasswordReset {
  email: String!
  resetPasswordPeriodValid: Boolean
}